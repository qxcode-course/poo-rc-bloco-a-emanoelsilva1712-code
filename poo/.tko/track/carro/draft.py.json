{
    "patches": [
        {
            "label": "2025-09-28_00-23-01",
            "content": "@@ -1,229 +0,0 @@\n-class Carro:%0A    def __init__(self, passMax: int, gasMax: int): %0A        self.passageiros: int = passageiros%0A        self.passMax: int = passMax%0A        self.gasMax: int = gasMax%0A        self.gas: int = 0%0A        self.km: int = 0\n",
            "lines": "0"
        },
        {
            "label": "2025-09-28_01-20-21",
            "content": "@@ -37,22 +37,32 @@\n pass\n-ageiros\n+Max: int, gasMax\n : int):\n+ \n %0A   \n@@ -134,9 +134,15 @@\n t = \n-2\n+passMax\n %0A   \n@@ -169,11 +169,14 @@\n t = \n-100\n+gasMax\n %0A   \n@@ -226,140 +226,4 @@\n  = 0\n- %0A%0A    def __str__(self) -%3E str:%0A        return %22pass:%7Bpass%7D, gas:%7Bgas%7D, km:%7Bkm%7D%22%0A        %0A        %0Adef main():%0A    Carro = Carro(%22%22,%22%22)\n",
            "lines": "7"
        },
        {
            "label": "2025-09-30_13-47-46",
            "content": "@@ -298,175 +298,8 @@\n    %0A\n-    def enter (self):%0A        if self.passageiros %3E= self.passMax:%0A            print(%22fail: limite de pessoas atingido%22)%0A        else:%0A            self.passageiros+=1%0A\n     \n@@ -315,25 +315,25 @@\n main():%0A    \n-c\n+C\n arro = Carro\n@@ -343,241 +343,4 @@\n ,%22%22)\n-%0A    while True:%0A        line: str = input()%0A        print(f%22$%22 + line)%0A        args: list%5Bstr%5D = line.split(%22 %22)%0A%0A        if args%5B0%5D == %22show%22:%0A            print(carro)%0A%0A        elif args%5B0%5D == %22enter%22:%0A            carro.enter()%0A%0Amain()\n",
            "lines": "14"
        },
        {
            "label": "2025-09-30_14-37-34",
            "content": "@@ -464,162 +464,8 @@\n s+=1\n-%0A%0A    def leave (self):%0A        if self.passageiros == 0:%0A            print(%22fail: nao ha ninguem no carro%22)%0A        else:%0A            self.passageiros-=1\n %0A   \n@@ -741,68 +741,8 @@\n ()%0A%0A\n-        elif args%5B0%5D == %22leave%22:%0A            carro.leave()%0A%0A\n main\n",
            "lines": "31"
        },
        {
            "label": "2025-09-30_14-51-53",
            "content": "@@ -654,17 +654,21 @@\n = Carro(\n-0\n+%22%22,%22%22\n )%0A    wh\n",
            "lines": "40"
        },
        {
            "label": "2025-09-30_14-52-37",
            "content": "@@ -258,21 +258,16 @@\n  %22pass:%7B\n-self.\n pass%7D, g\n@@ -270,21 +270,16 @@\n %7D, gas:%7B\n-self.\n gas%7D, km\n@@ -280,21 +280,16 @@\n s%7D, km:%7B\n-self.\n km%7D%22%0A   \n",
            "lines": "40"
        },
        {
            "label": "2025-09-30_14-53-08",
            "content": "@@ -251,17 +251,16 @@\n  return \n-f\n %22pass:%7Bs\n",
            "lines": "40"
        },
        {
            "label": "2025-09-30_14-53-23",
            "content": "@@ -268,23 +268,16 @@\n elf.pass\n-ageiros\n %7D, gas:%7B\n",
            "lines": "40"
        },
        {
            "label": "2025-09-30_14-53-50",
            "content": "@@ -258,17 +258,16 @@\n  f%22pass:\n- \n %7Bself.pa\n@@ -282,17 +282,16 @@\n s%7D, gas:\n- \n %7Bself.ga\n",
            "lines": "40"
        },
        {
            "label": "2025-09-30_14-54-45",
            "content": "@@ -299,17 +299,16 @@\n as%7D, km:\n- \n %7Bself.km\n",
            "lines": "40"
        },
        {
            "label": "2025-09-30_14-54-53",
            "content": "@@ -975,57 +975,8 @@\n ve()\n-%0A        elif args%5B0%5D == %22end%22:%0A            break\n %0A%0Ama\n",
            "lines": "40"
        },
        {
            "label": "2025-09-30_14-55-48",
            "content": "@@ -644,154 +644,8 @@\n s-=1\n-%0A%0A    def fuel (self, increment: int):%0A        self.gas+=increment%0A        if self.gas %3E 100:%0A            self.gas = 100%0A            %0A            \n %0A   \n@@ -1026,113 +1026,8 @@\n ak%0A%0A\n-        elif args%5B0%5D == %22fuel%22:%0A            increment = int(args%5B1%5D)%0A            carro.fuel(increment)%0A%0A%0A\n main\n",
            "lines": "42"
        },
        {
            "label": "2025-09-30_19-11-30",
            "content": "@@ -782,421 +782,16 @@\n     \n-def drive (self, distance: int):%0A        if self.passageiros == 0:%0A            print(%22fail: n%C3%A3o h%C3%A1 ningu%C3%A9m no carro%22)%0A        elif self.gas == 0:%0A            print(%22fail: tanque vazio%22)%0A        elif self.gas %3C distance:%0A            print(f%22fail: tanque vazio ap%C3%B3s andar %7Bdistance%7D km%22)%0A            self.km+=self.gas%0A            self.gas=0%0A        else:%0A            self.km+=distance%0A            self.gas-=distance\n+        \n %0A   \n@@ -1276,113 +1276,8 @@\n t)%0A%0A\n-        elif args%5B0%5D == %22drive%22:%0A            increment = int(args%5B1%5D)%0A            carro.drive(increment)%0A\n %0Amai\n",
            "lines": "54"
        },
        {
            "label": "2025-09-30_19-45-08",
            "content": "@@ -867,36 +867,36 @@\n int(%22fail: n\n-ao ha\n+%C3%A3o h%C3%A1\n  ningu\n-e\n+%C3%A9\n m no carro%22)\n",
            "lines": "68"
        },
        {
            "label": "2025-09-30_19-45-43",
            "content": "@@ -1039,17 +1039,17 @@\n vazio ap\n-o\n+%C3%B3\n s andar \n",
            "lines": "68"
        },
        {
            "label": "2025-09-30_19-46-27",
            "content": "@@ -803,16 +803,21 @@\n distance\n+: int\n ):%0A     \n",
            "lines": "68"
        },
        {
            "label": "2025-09-30_19-47-26",
            "content": "@@ -929,33 +929,32 @@\n           print(\n-f\n %22fail: tanque va\n",
            "lines": "68"
        },
        {
            "label": "2025-09-30_19-48-46",
            "content": "@@ -854,25 +854,24 @@\n       print(\n-f\n %22fail: nao h\n@@ -933,24 +933,25 @@\n       print(\n+f\n %22fail: tanqu\n",
            "lines": "68"
        },
        {
            "label": "2025-09-30_19-49-00",
            "content": "@@ -930,33 +930,32 @@\n           print(\n-f\n %22fail: tanque va\n",
            "lines": "68"
        },
        {
            "label": "2025-09-30_19-49-13",
            "content": "class Carro:\n    def __init__(self, passageiros: int):\n        self.passageiros: int = passageiros\n        self.passMax: int = 2\n        self.gasMax: int = 100\n        self.gas: int = 0\n        self.km: int = 0 \n\n    def __str__(self) -> str:\n        return f\"pass: {self.passageiros}, gas: {self.gas}, km: {self.km}\"\n        \n    def enter (self):\n        if self.passageiros >= self.passMax:\n            print(\"fail: limite de pessoas atingido\")\n        else:\n            self.passageiros+=1\n\n    def leave (self):\n        if self.passageiros == 0:\n            print(\"fail: nao ha ninguem no carro\")\n        else:\n            self.passageiros-=1\n\n    def fuel (self, increment: int):\n        self.gas+=increment\n        if self.gas > 100:\n            self.gas = 100\n            \n    def drive (self, distance):\n        if self.passageiros == 0:\n            print(f\"fail: nao ha ninguem no carro\")\n        elif self.gas == 0:\n            print(f\"fail: tanque vazio\")\n        elif self.gas < distance:\n            print(f\"fail: tanque vazio apos andar {distance} km\")\n            self.km+=self.gas\n            self.gas=0\n        else:\n            self.km+=distance\n            self.gas-=distance\n        \ndef main():\n    carro = Carro(0)\n    while True:\n        line: str = input()\n        print(f\"$\" + line)\n        args: list[str] = line.split(\" \")\n\n        if args[0] == \"show\":\n            print(carro)\n\n        elif args[0] == \"enter\":\n            carro.enter()\n\n        elif args[0] == \"leave\":\n            carro.leave()\n        elif args[0] == \"end\":\n            break\n\n        elif args[0] == \"fuel\":\n            increment = int(args[1])\n            carro.fuel(increment)\n\n        elif args[0] == \"drive\":\n            increment = int(args[1])\n            carro.drive(increment)\n\nmain()",
            "lines": "68"
        }
    ]
}