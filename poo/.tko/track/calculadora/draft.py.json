{
    "patches": [
        {
            "label": "2025-10-01_14-20-03",
            "content": "@@ -1,299 +0,0 @@\n-class Calc:%0A    def __init__(self, batteryMax: int):%0A        self.display: int = 0%0A        self.battery: int = 0%0A        self.batteryMax: int = batteryMax%0A%0A    def __str__(self) -%3E str:%0A        return f%22display: %7Bself.display:.2f%7D, battery: %7Bself.battery%7D%22%0A    %0A    def charge (self):%0A        %0A     \n",
            "lines": "0"
        },
        {
            "label": "2025-10-03_00-44-09",
            "content": "@@ -279,460 +279,20 @@\n self\n-, increment: int):%0A        self.battery+=increment%0A        if self.battery %3E self.batteryMax:%0A%0A    def sum (self):%0A%0A    def div (self):%0A        %0Adef main():%0A    calc = Calc()%0A    while True:%0A        line: str = input()%0A        print(f%22$%22 + line)%0A        args: list%5Bstr%5D = line.split(%22 %22)%0A%0A        if args%5B0%5D == %22show%22:%0A            print(calc)%0A%0A        if args%5B0%5D == %22charge%22:%0A            increment = int(args%5B1%5D)%0A            calc.charge(increment)%0A%0A   \n+):%0A        %0A\n     \n",
            "lines": "12"
        },
        {
            "label": "2025-10-03_00-59-09",
            "content": "@@ -394,304 +394,28 @@\n f):%0A\n-        if self.battery == 0:%0A            print(%22fail: bateria insuficiente%22)%0A        else:%0A            %0A    def div (self):%0A        if self.battery == 0:%0A            print(%22fail: bateria insuficiente%22)%0A        elif div == 0:%0A            print(%22fail: divisao por zero%22)%0A        else:%0A            \n+%0A    def div (self):\n %0A   \n@@ -736,109 +736,4 @@\n     \n-if args%5B0%5D == %22sum%22:%0A            calc.sum()%0A%0A        if args%5B0%5D == %22div%22:%0A            calc.div()%0A%0Amain ()\n",
            "lines": "32"
        },
        {
            "label": "2025-10-03_01-22-23",
            "content": "class Calc:\n    def __init__(self, batteryMax: int):\n        self.display: int = 0\n        self.battery: int = 0\n        self.batteryMax: int = batteryMax\n\n    def __str__(self) -> str:\n        return f\"display: {self.display:.2f}, battery: {self.battery}\"\n    \n    def charge (self, increment: int):\n        self.battery+=increment\n        if self.battery > self.batteryMax:\n\n    def sum (self):\n        if self.battery == 0:\n            print(\"fail: bateria insuficiente\")\n        else:\n            \n    def div (self):\n        if self.battery == 0:\n            print(\"fail: bateria insuficiente\")\n        elif div == 0:\n            print(\"fail: divisao por zero\")\n        else:\n            \n        \ndef main():\n    calc = Calc()\n    while True:\n        line: str = input()\n        print(f\"$\" + line)\n        args: list[str] = line.split(\" \")\n\n        if args[0] == \"show\":\n            print(calc)\n\n        if args[0] == \"charge\":\n            increment = int(args[1])\n            calc.charge(increment)\n\n        if args[0] == \"sum\":\n            calc.sum()\n\n        if args[0] == \"div\":\n            calc.div()\n\nmain ()",
            "lines": "47"
        }
    ]
}